#!/usr/bin/env bash
set -euo pipefail

# StreamWeave Publishing Script
# This script helps publish the package to crates.io

echo "🚀 StreamWeave Publishing Script"
echo "================================"

# Check if we're in a git repository
if ! git rev-parse --git-dir > /dev/null 2>&1; then
    echo "❌ Error: Not in a git repository"
    exit 1
fi

# Check if there are uncommitted changes
if ! git diff-index --quiet HEAD --; then
    echo "❌ Error: You have uncommitted changes. Please commit or stash them first."
    exit 1
fi

# Check if we're on main branch
current_branch=$(git branch --show-current)
if [ "$current_branch" != "main" ]; then
    echo "❌ Error: You must be on the main branch to publish. Current branch: $current_branch"
    exit 1
fi

# Get version from Cargo.toml
version=$(grep '^version = ' Cargo.toml | cut -d '"' -f 2)
echo "📦 Current version: $version"

# Check if version tag already exists
if git tag -l | grep -q "v$version"; then
    echo "❌ Error: Version tag v$version already exists"
    exit 1
fi

# Run pre-publish checks
echo "🔍 Running pre-publish checks..."

echo "  - Running cargo check..."
cargo check --all-targets --all-features

echo "  - Running tests..."
cargo test --all-targets --all-features

echo "  - Running clippy..."
cargo clippy --all-targets --all-features -- -D warnings

echo "  - Running rustfmt..."
cargo fmt --all -- --check

echo "  - Running security audit..."
cargo audit

echo "  - Building package..."
cargo build --release --all-features

echo "✅ All checks passed!"

# Ask for confirmation
read -p "🤔 Do you want to publish version $version to crates.io? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "❌ Publishing cancelled"
    exit 1
fi

# Create and push tag
echo "🏷️  Creating and pushing tag v$version..."
git tag "v$version"
git push origin "v$version"

echo "✅ Tag v$version created and pushed!"
echo "🔄 GitHub Actions will now handle the publishing process."
echo "📚 Check the Actions tab in your GitHub repository for progress."
