---
description: Documentation standards and conventions
alwaysApply: true
---

# Documentation Standards

## API Documentation
- Write comprehensive doc comments for all public APIs
- Include usage examples in doc comments
- Document error conditions and when they occur
- Use `///` for public items, `//!` for module-level docs

## README and Examples
- Keep README.md up to date with current features
- Provide clear, runnable examples
- Document both basic and advanced usage patterns
- Include performance characteristics where relevant

## Code Comments
- Write comments for complex logic and algorithms
- Explain the "why" not just the "what"
- Use TODO comments sparingly and with clear ownership
- Document any non-obvious performance implications

## Changelog
- Maintain a clear changelog for releases
- Document breaking changes prominently
- Include migration guides for major changes
- Link to relevant issues and PRs

## Architecture Documentation
- Document design decisions and trade-offs
- Explain the rationale behind architectural choices
- Provide diagrams for complex data flows
- Document extension points for contributors